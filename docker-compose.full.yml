version: '3.8'

services:
  # Backend API Service
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DB_HOST=mysql
      - REDIS_HOST=redis
    env_file:
      - ./backend/.env
    depends_on:
      - mysql
      - redis
    volumes:
      - ./backend/logs:/app/logs
      - ./backend/src:/app/src  # Hot reload for development
    restart: unless-stopped
    networks:
      - app-network

  # Frontend Service
  frontend:
    build:
      context: ./frontend-test
      dockerfile: Dockerfile
    ports:
      - "5173:5173"  # Vite dev server
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=http://localhost:3000/api/v1
      - VITE_APP_NAME=Shiv Accounts Pro
      - VITE_APP_VERSION=1.0.0
      - VITE_NODE_ENV=development
    env_file:
      - ./frontend-test/.env
    volumes:
      # Mount source code for hot reload
      - ./frontend-test/src:/app/src
      - ./frontend-test/public:/app/public
      - /app/node_modules  # Exclude node_modules
    restart: unless-stopped
    networks:
      - app-network
    depends_on:
      - backend

  # MySQL Database
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: shiv_accounts_dev
      MYSQL_USER: shiv_user
      MYSQL_PASSWORD: password
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    restart: unless-stopped
    networks:
      - app-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - app-network

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./ssl:/etc/nginx/ssl  # SSL certificates
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - app-network
    profiles:
      - production

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
  redis_data: